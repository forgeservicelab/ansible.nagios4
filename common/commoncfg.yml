---
- name: Enable Apache LDAP and SSL modules
  shell: "a2enmod {{ item }}"
  with_items:
    - authnz_ldap
    - ssl
    - headers
  register: module
  changed_when: "'already enabled' not in module.stdout_lines[-1]"
  notify: restart apache

- name: Upload HTTP and HTTPS configuration files
  copy:
    src: "../files/{{ item }}"
    dest: /etc/{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}/sites-available/
    owner: root
    group: root
    mode: 0644
  with_items:
    - default
    - default-ssl
  notify: restart apache

- name: Enable Apache default sites
  shell: "a2ensite {{ item }}"
  with_items:
    - default
    - default-ssl
  register: site
  changed_when: "'already enabled' not in site.stdout_lines[-1]"
  notify: restart apache

- name: Upload apache configuration
  template:
    src: ../templates/apache.j2
    dest: /etc/{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}/conf.d/nagios.conf
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: allow access to nagios cgi
  replace:
    dest: /usr/local/nagios/etc/cgi.cfg
    regexp: ^(.+)nagiosadmin
    replace: \1*

- name: Change localhost notification period to 24x7
  replace:
    dest: /usr/local/nagios/etc/objects/localhost.cfg
    regexp: (define host{)(?!\n\s*?notification)
    replace: \1\n\tnotification_period\t24x7

- name: Add IPv4 flag to check-host-alive command
  lineinfile:
    dest: /usr/local/nagios/etc/objects/commands.cfg
    regexp: (.+)(check_ping)(.+)(3000)(.+)
    backrefs: yes
    line: \1\2\3\4\5 -4
    state: present

- name: Upload openstack credentials file
  template:
    src: ../templates/openstack.j2
    dest: /usr/local/nagios/etc/openstack.conf
    owner: nagios
    group: nagios
    mode: 0400

- name: Create clean directory for Contact Group fragments
  file:
    path: /tmp/cntg
    state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Contact Group fragments
  template:
    src: ../templates/contactgroups.cfg.j2
    dest: /tmp/cntg/cntg-{{ item.contactgroup_name }}
  with_items:
    - "{{ contactgroups }}"

- name: Create Common Contacts fragments
  template:
    src: ../templates/contact.cfg.j2
    dest: /tmp/cntg/cntg-{{ item.contact_name }}
  with_items:
    - "{{ contacts }}"

- name: Compose Contact Groups configuration
  assemble:
    src: /tmp/cntg
    dest: /usr/local/nagios/etc/objects-extra/00-ContactGroups.cfg
    delimiter: "{{'\n'}}###################################################{{'\n\n'}}"
    owner: nagios
    group: nagios
    mode: 0664

- name: Create clean directory for Service Group fragments
  file:
    path: /tmp/svcg
    state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Service Group fragments
  template:
    src: ../templates/servicegroups.cfg.j2
    dest: /tmp/svcg/svcg-{{ item.servicegroup_name }}
  with_items:
    - "{{ servicegroups }}"
  when: servicegroups

- name: Create Service template
  template:
    src: ../templates/service.cfg.j2
    dest: /tmp/svcg/svct-{{ item.name }}
  with_items:
    - "{{ servicetemplates }}"
  when: servicetemplates

- name: Compose Service Groups configuration
  assemble:
    src: /tmp/svcg
    dest: /usr/local/nagios/etc/objects-extra/01-ServiceGroups.cfg
    delimiter: "{{'\n'}}###################################################{{'\n\n'}}"
    owner: nagios
    group: nagios
    mode: 0664

- name: Create clean directory for Host Group fragments
  file:
    path: /tmp/hstg
    state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Host Group fragments
  template:
    src: ../templates/hostgroups.cfg.j2
    dest: /tmp/hstg/hstg-{{ item.hostgroup_name }}
  with_items:
    - "{{ hostgroups }}"
  when: hostgroups

- name: Create Host template
  template:
    src: ../templates/host.cfg.j2
    dest: /tmp/hstg/hstt-{{ item.name }}
  with_items:
    - "{{ hosttemplates }}"
  when: hosttemplates

- name: Compose Host Groups configuration
  assemble:
    src: /tmp/hstg
    dest: /usr/local/nagios/etc/objects-extra/ZZ-HostGroups.cfg
    delimiter: "{{'\n'}}###################################################{{'\n\n'}}"
    owner: nagios
    group: nagios
    mode: 0664

- name: Prepare target directory for redmine alert archives
  file:
    path: /usr/local/nagios/var/redmine.bugs
    owner: nagios
    group: nagios
    mode: 0755
    state: directory

- name: Upload custom notification script for redmine
  template:
    src: ../templates/redmine_bugs.j2
    dest: /usr/local/nagios/libexec/redmine_bugs
    owner: nagios
    group: nagios
    mode: 0755

- name: Create clean directory for Command fragments
  file:
    path: /tmp/cmd
    state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Command fragments
  template:
    src: ../templates/command.cfg.j2
    dest: /tmp/cmd/cmd-{{ item.command_name }}
  with_items:
    - "{{ commands }}"

- name: Compose Commands configuration
  assemble:
    src: /tmp/cmd
    dest: /usr/local/nagios/etc/objects-extra/03-Commands.cfg
    delimiter: "{{'\n'}}###################################################{{'\n\n'}}"
    owner: nagios
    group: nagios
    mode: 0664
