---
- name: Enable Apache LDAP module
  shell: a2enmod authnz_ldap
  notify: restart apache

- name: Set up LDAP authentication
  replace:
    dest=/etc/apache2/conf.d/nagios.conf
    regexp=^(.+)AuthUserFile.*$
    replace='\1AuthBasicProvider ldap\n\1AuthLDAPURL "ldaps://193.166.24.115:636/ou=people,dc=forgeservicelab,dc=fi?cn"\n\1AuthLDAPBindDN "cn=<ldap_bind_name>,ou=services,dc=forgeservicelab,dc=fi"\n\1AuthLDAPBindPassword "<ldap_password>"\n\1Require ldap-group ou=digile, ou=groups, dc=forgeservicelab, dc=fi'

- name: remove basic auth leftovers
  replace:
    dest=/etc/apache2/conf.d/nagios.conf
    regexp='^(.+)Require valid-user$'

- name: allow access to nagios cgi
  replace:
    dest=/usr/local/nagios/etc/cgi.cfg
    regexp=^(.+)nagiosadmin
    replace='\1*'

- name: Create clean directory for Contact Group fragments
  file:
    path=/tmp/cntg
    state="{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Contact Group fragments
  template:
    src=templates/contactgroups.cfg.j2
    dest="/tmp/cntg/cntg-{{ item.contactgroup_name }}"
  with_items:
    - "{{ contactgroups }}"

- name: Create Common Contacts fragments
  template:
    src=templates/contact.cfg.j2
    dest="/tmp/cntg/cntg-{{ item.contact_name }}"
  with_items:
    - "{{ contacts }}"

- name: Compose Contact Groups configuration
  assemble:
    src=/tmp/cntg
    dest=/usr/local/nagios/etc/objects-extra/00-ContactGroups.cfg
    delimiter="{{'\n'}}###################################################{{'\n\n'}}"
    owner=nagios
    group=nagios
    mode=0664

- name: Create clean directory for Service Group fragments
  file:
    path=/tmp/svcg
    state="{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Service Group fragments
  template:
    src=templates/servicegroups.cfg.j2
    dest="/tmp/svcg/svcg-{{ item.servicegroup_name }}"
  with_items:
    - "{{ servicegroups }}"
  when: servicegroups

- name: Create Service template
  template:
    src=templates/service.cfg.j2
    dest="/tmp/svcg/svct-{{ item.name }}"
  with_items:
    - "{{ servicetemplates }}"
  when: servicetemplates

- name: Compose Service Groups configuration
  assemble:
    src=/tmp/svcg
    dest=/usr/local/nagios/etc/objects-extra/01-ServiceGroups.cfg
    delimiter="{{'\n'}}###################################################{{'\n\n'}}"
    owner=nagios
    group=nagios
    mode=0664

- name: Create clean directory for Host Group fragments
  file:
    path=/tmp/hstg
    state="{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Host Group fragments
  template:
    src=templates/hostgroups.cfg.j2
    dest="/tmp/hstg/hstg-{{ item.hostgroup_name }}"
  with_items:
    - "{{ hostgroups }}"
  when: hostgroups

- name: Create Host template
  template:
    src=templates/host.cfg.j2
    dest="/tmp/hstg/hstt-{{ item.name }}"
  with_items:
    - "{{ hosttemplates }}"
  when: hosttemplates

- name: Compose Host Groups configuration
  assemble:
    src=/tmp/hstg
    dest=/usr/local/nagios/etc/objects-extra/02-HostGroups.cfg
    delimiter="{{'\n'}}###################################################{{'\n\n'}}"
    owner=nagios
    group=nagios
    mode=0664

- name: Create clean directory for Command fragments
  file:
    path=/tmp/cmd
    state="{{ item }}"
  with_items:
    - absent
    - directory

- name: Create Command fragments
  template:
    src=templates/command.cfg.j2
    dest="/tmp/cmd/cmd-{{ item.command_name }}"
  with_items:
    - "{{ commands }}"

- name: Compose Commands configuration
  assemble:
    src=/tmp/cmd
    dest=/usr/local/nagios/etc/objects-extra/03-Commands.cfg
    delimiter="{{'\n'}}###################################################{{'\n\n'}}"
    owner=nagios
    group=nagios
    mode=0664
